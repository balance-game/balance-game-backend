/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BalanceGame,
  BalanceGameInterface,
} from "../../contracts/BalanceGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "questionA",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "questionB",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "NewGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "votedAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum BalanceGame.VoteOpttion",
        name: "voteOpttion",
        type: "uint8",
      },
    ],
    name: "NewVote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhiteListUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAMEINDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_questionA",
        type: "string",
      },
      {
        internalType: "string",
        name: "_questionB",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "findGameById",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "questionA",
        type: "string",
      },
      {
        internalType: "string",
        name: "questionB",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isContinue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "enum BalanceGame.VoteOpttion",
        name: "_voteOption",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "whitelistUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600060015534801561001557600080fd5b50604051611c3a380380611c3a8339818101604052810190610037919061021f565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100aa5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a1919061028d565b60405180910390fd5b6100b98161012060201b60201c565b5080608081815250506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550506102a8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6101fc816101e9565b811461020757600080fd5b50565b600081519050610219816101f3565b92915050565b600060208284031215610235576102346101e4565b5b60006102438482850161020a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102778261024c565b9050919050565b6102878161026c565b82525050565b60006020820190506102a2600083018461027e565b92915050565b6080516119696102d16000396000818161031c01528181610579015261098501526119696000f3fe60806040526004361061009c5760003560e01c8063937cabed11610064578063937cabed14610188578063943e8216146101b8578063bf8fbbd2146101d4578063dbf65de0146101ff578063f24f945914610228578063f2fde38b1461026c5761009c565b8063301ed59e146100a1578063372c12b1146100cc5780634120c2c314610109578063715018a6146101465780638da5cb5b1461015d575b600080fd5b3480156100ad57600080fd5b506100b6610295565b6040516100c39190610dc2565b60405180910390f35b3480156100d857600080fd5b506100f360048036038101906100ee9190610e4f565b61029b565b6040516101009190610e97565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b9190610e4f565b6102bb565b60405161013d9190610e97565b60405180910390f35b34801561015257600080fd5b5061015b6102db565b005b34801561016957600080fd5b506101726102ef565b60405161017f9190610ec1565b60405180910390f35b6101a2600480360381019061019d919061104e565b610318565b6040516101af9190610dc2565b60405180910390f35b6101d260048036038101906101cd91906110fe565b610577565b005b3480156101e057600080fd5b506101e9610983565b6040516101f69190610dc2565b60405180910390f35b34801561020b57600080fd5b506102266004803603810190610221919061116a565b6109a7565b005b34801561023457600080fd5b5061024f600480360381019061024a91906111aa565b610a58565b604051610263989796959493929190611256565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190610e4f565b610bd0565b005b60015481565b60056020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b6102e3610c56565b6102ed6000610cdd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000034101561037d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103749061132e565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610409576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104009061139a565b60405180910390fd5b81421061044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611406565b60405180910390fd5b6001600081548092919061045e90611455565b91905055506000600260006001548152602001908152602001600020905060015481600001819055508481600101908161049891906116a9565b50838160020190816104aa91906116a9565b50600081600301819055506000816004018190555060008160060181905550828160070181905550338160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff166001547fbd0eb6c105d1689222919a57e7192e892805fd8bf6c8c6578545f0cd96394b298787876040516105629392919061177b565b60405180910390a36001549150509392505050565b7f00000000000000000000000000000000000000000000000000000000000000003410156105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d19061132e565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d9061139a565b60405180910390fd5b6000600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107079061180c565b60405180910390fd5b42816007015411610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d90611878565b60405180910390fd5b6003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb906118e4565b60405180910390fd5b60016003600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018111156108d6576108d5611904565b5b8260018111156108e9576108e8611904565b5b1461090c5780600401600081548092919061090390611455565b91905055610926565b80600301600081548092919061092190611455565b919050555b5081600181111561093a57610939611904565b5b3373ffffffffffffffffffffffffffffffffffffffff16847f07e0ee871a145b34a4f0117ec30da34c5bd4487a09f78fd3b31a366a55fd2d2960405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109af610c56565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f111b0cdde6a17355dbeb5ce9b87078297fec9b61b51550540b0d4e2f1e4913c282604051610a4c9190610e97565b60405180910390a25050565b6002602052806000526040600020600091509050806000015490806001018054610a81906114cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610aad906114cc565b8015610afa5780601f10610acf57610100808354040283529160200191610afa565b820191906000526020600020905b815481529060010190602001808311610add57829003601f168201915b505050505090806002018054610b0f906114cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3b906114cc565b8015610b885780601f10610b5d57610100808354040283529160200191610b88565b820191906000526020600020905b815481529060010190602001808311610b6b57829003601f168201915b5050505050908060030154908060040154908060060154908060070154908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b610bd8610c56565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c419190610ec1565b60405180910390fd5b610c5381610cdd565b50565b610c5e610da1565b73ffffffffffffffffffffffffffffffffffffffff16610c7c6102ef565b73ffffffffffffffffffffffffffffffffffffffff1614610cdb57610c9f610da1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd29190610ec1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610dbc81610da9565b82525050565b6000602082019050610dd76000830184610db3565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1c82610df1565b9050919050565b610e2c81610e11565b8114610e3757600080fd5b50565b600081359050610e4981610e23565b92915050565b600060208284031215610e6557610e64610de7565b5b6000610e7384828501610e3a565b91505092915050565b60008115159050919050565b610e9181610e7c565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b610ebb81610e11565b82525050565b6000602082019050610ed66000830184610eb2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f2f82610ee6565b810181811067ffffffffffffffff82111715610f4e57610f4d610ef7565b5b80604052505050565b6000610f61610ddd565b9050610f6d8282610f26565b919050565b600067ffffffffffffffff821115610f8d57610f8c610ef7565b5b610f9682610ee6565b9050602081019050919050565b82818337600083830152505050565b6000610fc5610fc084610f72565b610f57565b905082815260208101848484011115610fe157610fe0610ee1565b5b610fec848285610fa3565b509392505050565b600082601f83011261100957611008610edc565b5b8135611019848260208601610fb2565b91505092915050565b61102b81610da9565b811461103657600080fd5b50565b60008135905061104881611022565b92915050565b60008060006060848603121561106757611066610de7565b5b600084013567ffffffffffffffff81111561108557611084610dec565b5b61109186828701610ff4565b935050602084013567ffffffffffffffff8111156110b2576110b1610dec565b5b6110be86828701610ff4565b92505060406110cf86828701611039565b9150509250925092565b600281106110e657600080fd5b50565b6000813590506110f8816110d9565b92915050565b6000806040838503121561111557611114610de7565b5b600061112385828601611039565b9250506020611134858286016110e9565b9150509250929050565b61114781610e7c565b811461115257600080fd5b50565b6000813590506111648161113e565b92915050565b6000806040838503121561118157611180610de7565b5b600061118f85828601610e3a565b92505060206111a085828601611155565b9150509250929050565b6000602082840312156111c0576111bf610de7565b5b60006111ce84828501611039565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112115780820151818401526020810190506111f6565b60008484015250505050565b6000611228826111d7565b61123281856111e2565b93506112428185602086016111f3565b61124b81610ee6565b840191505092915050565b60006101008201905061126c600083018b610db3565b818103602083015261127e818a61121d565b90508181036040830152611292818961121d565b90506112a16060830188610db3565b6112ae6080830187610db3565b6112bb60a0830186610db3565b6112c860c0830185610db3565b6112d560e0830184610eb2565b9998505050505050505050565b7f4e6f7420456e6f75676820457468657200000000000000000000000000000000600082015250565b60006113186010836111e2565b9150611323826112e2565b602082019050919050565b600060208201905081810360008301526113478161130b565b9050919050565b7f6f6e6c79207573652057686974656c6973740000000000000000000000000000600082015250565b60006113846012836111e2565b915061138f8261134e565b602082019050919050565b600060208201905081810360008301526113b381611377565b9050919050565b7f696e76616c696420646561646c696e6500000000000000000000000000000000600082015250565b60006113f06010836111e2565b91506113fb826113ba565b602082019050919050565b6000602082019050818103600083015261141f816113e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061146082610da9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361149257611491611426565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114e457607f821691505b6020821081036114f7576114f661149d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261155f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611522565b6115698683611522565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115a66115a161159c84610da9565b611581565b610da9565b9050919050565b6000819050919050565b6115c08361158b565b6115d46115cc826115ad565b84845461152f565b825550505050565b600090565b6115e96115dc565b6115f48184846115b7565b505050565b5b818110156116185761160d6000826115e1565b6001810190506115fa565b5050565b601f82111561165d5761162e816114fd565b61163784611512565b81016020851015611646578190505b61165a61165285611512565b8301826115f9565b50505b505050565b600082821c905092915050565b600061168060001984600802611662565b1980831691505092915050565b6000611699838361166f565b9150826002028217905092915050565b6116b2826111d7565b67ffffffffffffffff8111156116cb576116ca610ef7565b5b6116d582546114cc565b6116e082828561161c565b600060209050601f8311600181146117135760008415611701578287015190505b61170b858261168d565b865550611773565b601f198416611721866114fd565b60005b8281101561174957848901518255600182019150602085019450602081019050611724565b868310156117665784890151611762601f89168261166f565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152611795818661121d565b905081810360208301526117a9818561121d565b90506117b86040830184610db3565b949350505050565b7f696e636f72726563742067616d65496400000000000000000000000000000000600082015250565b60006117f66010836111e2565b9150611801826117c0565b602082019050919050565b60006020820190508181036000830152611825816117e9565b9050919050565b7f546869732067616d652069732066696e69736865642067616d65000000000000600082015250565b6000611862601a836111e2565b915061186d8261182c565b602082019050919050565b6000602082019050818103600083015261189181611855565b9050919050565b7f616c726561647920766f74656400000000000000000000000000000000000000600082015250565b60006118ce600d836111e2565b91506118d982611898565b602082019050919050565b600060208201905081810360008301526118fd816118c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212204d5976212f39a707db41ed9120f3d566499b648226a37fbebaa81fd1a8e8107964736f6c634300081c0033";

type BalanceGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalanceGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalanceGame__factory extends ContractFactory {
  constructor(...args: BalanceGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _cost: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_cost, overrides || {});
  }
  override deploy(
    _cost: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_cost, overrides || {}) as Promise<
      BalanceGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BalanceGame__factory {
    return super.connect(runner) as BalanceGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceGameInterface {
    return new Interface(_abi) as BalanceGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BalanceGame {
    return new Contract(address, _abi, runner) as unknown as BalanceGame;
  }
}
